<?xml version="1.0" encoding="UTF-8"?>
<project
		xmlns="http://maven.apache.org/POM/4.0.0"
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
                        https://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<!-- Spring Boot Kararlı Parent Sürüm (3.1.1) -->
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.1.1</version>
		<relativePath/>
	</parent>

	<!-- Proje Bilgileri -->
	<groupId>com.example</groupId>
	<artifactId>financial_data_processor_3</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>financial_data_processor_3</name>
	<description>Demo project for Spring Boot (3.1.1)</description>

	<properties>
		<!-- Java 17 kullanıyoruz (Spring Boot 3.x için önerilir) -->
		<java.version>17</java.version>
	</properties>

	<dependencies>
		<!-- 1) JPA (Hibernate + Spring Data JPA) -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>

		<!-- 2) Redis (Klasik) -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-redis</artifactId>
		</dependency>

		<!-- 3) Redis Reaktif -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-redis-reactive</artifactId>
		</dependency>

		<!-- 4) Web (REST API) -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<!-- 5) Kafka Streams (Apache Kafka) -->
		<dependency>
			<groupId>org.apache.kafka</groupId>
			<artifactId>kafka-streams</artifactId>
		</dependency>

		<!-- 6) Spring Kafka (Produce/Consume fonksiyonları) -->
		<dependency>
			<groupId>org.springframework.kafka</groupId>
			<artifactId>spring-kafka</artifactId>
		</dependency>

		<!-- 7) Lombok (kod sadeleştirme; opsiyonel) -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>

		<!-- 8) Test (Spring Boot Starter Test) -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- 9) Reactor Test (reaktif testler için) -->
		<dependency>
			<groupId>io.projectreactor</groupId>
			<artifactId>reactor-test</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- 10) Spring Kafka Test (Kafka ile ilgili test fonksiyonları) -->
		<dependency>
			<groupId>org.springframework.kafka</groupId>
			<artifactId>spring-kafka-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<!-- Maven Compiler Plugin (Lombok Annotation Processor Desteği) -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.11.0</version>
				<configuration>
					<annotationProcessorPaths>
						<annotationProcessorPath>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
							<version>1.18.28</version> <!-- MUTLAKA BURAYA EKLE -->
						</annotationProcessorPath>
					</annotationProcessorPaths>
				</configuration>
			</plugin>


			<!-- Spring Boot Maven Plugin (jar/war paketleme ve run) -->
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<!-- Eğer Docker image build istersen:
                <configuration>
                    <image>
                        <builder>paketobuildpacks/builder-jammy-base:latest</builder>
                    </image>
                </configuration>
                -->
			</plugin>
		</plugins>
	</build>

</project>
